CREATE OR REPLACE PACKAGE project4
AS
   TYPE instructor_info_cursor IS REF CURSOR;
   PROCEDURE get_instructor_list(p_output OUT SYS_REFCURSOR);
   PROCEDURE get_instructor_info(p_instructor_id IN NUMBER, p_output OUT SYS_REFCURSOR);
   PROCEDURE update_section_capacity(p_section_id IN NUMBER, p_capacity IN NUMBER);
END project4;

CREATE OR REPLACE PACKAGE BODY project4 
AS  
   -- Get list of instructor and display it later in dropdown list
   PROCEDURE get_instructor_list(p_output OUT SYS_REFCURSOR) 
   IS 
   BEGIN 
      OPEN p_output FOR  
      SELECT INSTRUCTOR_ID, SALUTATION, FIRST_NAME, LAST_NAME  
        FROM INSTRUCTOR;  
   END get_instructor_list; 

   PROCEDURE get_instructor_info(p_instructor_id IN NUMBER, p_output OUT SYS_REFCURSOR) 
   IS 
   BEGIN 
      OPEN p_output FOR 
      SELECT 
        i.INSTRUCTOR_ID, i.SALUTATION, i.FIRST_NAME, i.LAST_NAME, c.COURSE_NO, 
        c.DESCRIPTION, c.COST, c.PREREQUISITE, 
        s.SECTION_ID, s.SECTION_NO, s.START_DATE_TIME, 
        s.LOCATION, s.CAPACITY 
      FROM 
        INSTRUCTOR i 
        JOIN SECTION s ON i.INSTRUCTOR_ID = s.INSTRUCTOR_ID 
        JOIN COURSE c ON s.COURSE_NO = c.COURSE_NO 
      WHERE 
        i.INSTRUCTOR_ID = p_instructor_id; 
   END get_instructor_info; 

   PROCEDURE update_section_capacity(p_section_id IN NUMBER, p_capacity IN NUMBER) 
   IS 
   BEGIN 
      UPDATE SECTION SET CAPACITY = p_capacity WHERE SECTION_ID = p_section_id; 
      COMMIT; 
   END update_section_capacity; 
END project4;